#@ load("@ytt:data", "data")
#@yaml/map-key-override
---
tap_install:
  values:
    shared:
      ingress_domain: #@ data.values.ingress_domain
      #@ if data.values.ca_cert_data:
      ingress_issuer: local-issuer
      #@ end
      image_registry:
        project_path: #@ "{}/{}".format(data.values.image_registry, data.values.image_registry_tap)
      #@ if "ca_cert_data" in data.values:
      ca_cert_data: #@ "{}\n{}".format(data.values.ca_cert_data,data.values.other_ca_cert_data)
      #@ end
    
    ceip_policy_disclosed: true
    
    profile: #@ data.values.profile
    
    supply_chain: #@ data.values.supply_chain
    
    ootb_supply_chain_basic:
      registry:
        server: #@ "{}".format(data.values.image_registry)
        repository: #@ "{}".format(data.values.image_registry_supply_chain)
      gitops:
        #@ if/end not data.values.git.gitea.git_repo:
        ssh_secret: ""
        #@ if/end data.values.git.gitea.git_repo:
        ssh_secret: "git-secret"
      #@ if data.values.maven_repo:
      maven:
        repository:
          url: #@ data.values.maven_repo
          secret_name: "maven-credentials"
      #@ end
    
    ootb_supply_chain_testing:
      registry:
        server: #@ "{}".format(data.values.image_registry)
        repository: #@ "{}".format(data.values.image_registry_supply_chain)
      gitops:
        #@ if/end not data.values.git.gitea.git_repo:
        ssh_secret: ""
        #@ if/end data.values.git.gitea.git_repo:
        ssh_secret: "git-secret"
      #@ if data.values.maven_repo:
      maven:
        repository:
          url: #@ data.values.maven_repo
          secret_name: "maven-credentials"
      #@ end
    
    ootb_supply_chain_testing_scanning:
      registry:
        server: #@ "{}".format(data.values.image_registry)
        repository: #@ "{}".format(data.values.image_registry_supply_chain)
      gitops:
        #@ if/end not data.values.git.gitea.git_repo:
        ssh_secret: ""
        #@ if/end data.values.git.gitea.git_repo:
        ssh_secret: "git-secret"
      #@ if data.values.maven_repo:
      maven:
        repository:
          url: #@ data.values.maven_repo
          secret_name: "maven-credentials"
      #@ end

    contour:
      envoy:
        service:
          type: LoadBalancer
          #@ if data.values.ingress_ip.enabled == True:
          loadBalancerIP: #@ data.values.ingress_ip.ip
          #@ end
      contour:
        configFileContents:
          tls:
            minimum-protocol-version: "1.2"
            cipher-suites:
            - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
            - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
            - 'ECDHE-ECDSA-AES256-GCM-SHA384'
            - 'ECDHE-RSA-AES256-GCM-SHA384'
    
    buildservice:
      kp_default_repository: #@ "{}/{}".format(data.values.image_registry, data.values.image_registry_build)
      kp_default_repository_username: #@ data.values.image_registry_user
      #@ if data.values.airgapped:
      exclude_dependencies: true
      #@ end
    
    tap_gui:
      service_type: ClusterIP
      metadataStoreAutoconfiguration: true
      ingressEnabled: "true"
      app_config:
        #@ if data.values.customization.enabled == True:
        customize:
          custom_logo: #@ data.values.customization.custom_logo_base64
          custom_name: #@ "{} Developer Portal".format(data.values.customization.custom_name)
        organization:
          name: #@ data.values.customization.custom_name
        #@ end
        catalog:
          locations:
            - type: url
              target: https://github.com/MoSehsah/bank-demo/blob/main/catalog/catalog-info.yaml
        backend:
          reading:
            allow:
              - host: #@ "git.{}".format(data.values.git.gitea.git_repo) 
        auth:
          allowGuestAccess: true
          environment: development
          session:
            secret: secretvalue
          providers:
            oidc:
              development:
                clientId: tap-auth
                clientSecret: secretvalue
                metadataUrl: #@ "https://dex.{}/.well-known/openid-configuration".format(data.values.ingress_domain)
    
    cnrs:
      domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
      #@ if data.values.ca_cert_data:
      ingress_issuer: local-issuer
      #@ end
    
    metadata_store:
      ns_for_export_app_cert: "*"
      app_service_type: ClusterIP
    
    scanning:
      metadataStore:
        url: ""
    
    grype:
      targetImagePullSecret: "scanner-secret-ref"
      #@ if data.values.airgapped:
      db:
        dbUpdateUrl: #@ "https://minio.{}/grype/databases/listing.json".format(data.values.ingress_domain)
      #@ end

    #@ if data.values.airgapped:
    crossplane:
      registryCaBundleConfig:
        name: ca-bundle-config
        key: ca-bundle
    #@ end

    #@ if data.values.airgapped:
    bitnami_services:
      mysql:
        helm_chart:
          repo: #@ "oci://{}/bitnami/charts".format(data.values.image_registry)
          version: 9.11.2
          chart_pull_secret_ref:
            name: chart-pull
            namespace: default
          container_pull_secret_ref:
            name: container-pull
            namespace: default
      postgresql:
        helm_chart:
          repo: #@ "oci://{}/bitnami/charts".format(data.values.image_registry)
          version: 12.8.4
          chart_pull_secret_ref:
            name: chart-pull
            namespace: default
          container_pull_secret_ref:
            name: container-pull
            namespace: default
      rabbitmq:
        helm_chart:
          repo: #@ "oci://{}/bitnami/charts".format(data.values.image_registry)
          version: 12.0.3
          chart_pull_secret_ref:
            name: chart-pull
            namespace: default
          container_pull_secret_ref:
            name: container-pull
            namespace: default
      redis:
        helm_chart:
          repo: #@ "oci://{}/bitnami/charts".format(data.values.image_registry)
          version: 17.15.3
          chart_pull_secret_ref:
            name: chart-pull
            namespace: default
          container_pull_secret_ref:
            name: container-pull
            namespace: default
      kafka:
        helm_chart:
          repo: #@ "oci://{}/bitnami/charts".format(data.values.image_registry)
          version: 24.0.4
          chart_pull_secret_ref:
            name: chart-pull
            namespace: default
          container_pull_secret_ref:
            name: container-pull
            namespace: default
      mongodb:
        helm_chart:
          repo: #@ "oci://{}/bitnami/charts".format(data.values.image_registry)
          version: 13.16.1
          chart_pull_secret_ref:
            name: chart-pull
            namespace: default
          container_pull_secret_ref:
            name: container-pull
            namespace: default
    #@ end

    policy:
      tuf_enabled: false
    tap_telemetry:
      installed_for_vmware_internal_use: "true"

    local_source_proxy:
      repository: #@ "{}/tap-lsp/tap-lsp".format(data.values.image_registry)
      push_secret:
        name:  lsp-push-credentials
        namespace: default
        create_export: true
      pull_secret:
        name:  lsp-pull-credentials
        namespace: default
        create_export: true

    namespace_provisioner:
      controller: false
      gitops_install:
        ref: origin/main
        subPath: gorkem/namespace-provisioner/namespaces
        url: #@ "{}".format(data.values.git.push_repo.fqdn)
      additional_sources:
      - git:
          ref: origin/main
          subPath: gorkem/namespace-provisioner/resources
          url: #@ "{}".format(data.values.git.push_repo.fqdn)
        path: _ytt_lib/resources
      #@ if/end data.values.git.gitea.git_repo:
      import_data_values_secrets:
      - name: workload-git-auth
        namespace: tap-install
        create_export: true
      #@ if/end data.values.airgapped:
      overlay_secrets:
      - name: grype-airgap-overlay-override
        namespace: tap-install
        create_export: true
    #@ if data.values.supply_chain == "testing_scanning":
    package_overlays:
      - name: ootb-supply-chain-testing-scanning
        secrets:
          - name: ootb-supply-chain-testing-scanning-add-source-scanner
    #@ end